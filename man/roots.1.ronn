roots(1) -- a toolkit for quickly building beautiful websites
=============================================================

## SYNOPSIS

`roots new <name>` [ --<template> ]<br>
`roots template` <command><br>
`roots compile` [ `--no-compress` ]<br>
`roots watch` [ --no-open ]<br>
`roots deploy` [ <name> ] [ --<service> ]<br>
`roots clean`<br>
`roots` `version`|`-v`<br>
`roots pkg` [ <command> ]<br>
`roots plugin` <command>

## DESCRIPTION

Roots exposes a variety of commands for creating, managing, compiling, and
deploying websites. Commands are listed and documented below.

[GitHub repo](https://github.com/jenius/roots)

## NEW

`roots new <name>` [ --<template> ]

Create a new roots project called <name>.

templates:

  - `default`:
    jade, stylus, and coffeescript (default stack)
  - `ejs`:
    ejs, stylus, and coffeescript
  - `min`:
    default stack but with no comments and it uses jade layouts
  - `basic`:
    html, css, javascript, no layouts
  - `blog`:
    blog example optimized for dynamic content

## TEMPLATE

`roots template` <command>

Manage roots project templates.

commands:

  - `add` <name> <git-url>:
    Git clone will download the template.
  - `remove` <name>:
    Be careful with this.
  - `default` <name>:
    Sets a template to be the default for roots new.

## COMPILE

`roots compile` [ `--no-compress` ]

Compile, compress, and minify the project to `public`.

  - `--no-compress`:
    Bypass the compression step.

## WATCH

`roots watch` [ --no-open ]

Watch your project and compile/reload whenever a file is saved. Does
not work for roots-express or roots-rails.

  - `--no-open`:
    Don't open a new browser window.


## DEPLOY

`roots deploy` [ <name> ] [ --<service> ]

Configure, compile, commit, and deploy your project. <name> optional for
heroku.

services:

  - `heroku`:
    The default service.
  - `nodejitsu`:
    see: [nodejitsu.com](https://www.nodejitsu.com/)
  - `gh-pages`:
    Deploy to a git branch labeled "gh-pages". GitHub will automatically host the compiled project at `http://<username>.github.io/<repo name>/`. Be careful because the root of your project will not be at the root of the URL, unlike when you are viewing your project with `roots watch`.

## CLEAN

`roots clean`

Remove the compiled files.

## VERSION

`roots` `version`|`-v`

Print the version of the current roots install.

## PKG

`roots pkg` [ <command> ]

Exposes a package manager's interface. Type `roots pkg` to display the package
manager's options. any command given after `pkg` is delegated to the package
manager.

package managers:

  - `bower`:
    http://bower.io (default)
  - `cdnjs`:
    https://github.com/jenius/cli-js

bower commands:

  - `list`:
    List the components you have installed in the current project.
  - `search` <query>:
    Search for components.
  - `install` <name>:
    Install a component.
  - `uninstall` <name>:
    Uninstall a component.
  - `update` <name>:
    Update a component to the latest version.
  - `info` <name>:
    Get more info about a component.

You can change your package manager via the `~/.rootsrc` file.

## PLUGIN

`roots plugin` <command>

Manages plugins like 3rd party roots compilers.

commands:

  - `generate` --js:
    optional, generates a javascript template rather than coffeescript
  - `install` <username>/<repo>:
    Must provide a username/repo on GitHub.

## DOCUMENTATION

Full docs can be found at http://roots.cx

## BUGS

Please report bugs at the GitHub repo [issue
tracker](https://github.com/jenius/roots/issues).
